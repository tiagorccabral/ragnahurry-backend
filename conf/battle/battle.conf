// _________                                    
// \_   ___ \_______  ____   ____  __ __  ______
// /    \  \/\_  __ \/  _ \ /    \|  |  \/  ___/
// \     \____|  | \(  <_> )   |  \  |  /\___ \ 
//  \______  /|__|   \____/|___|  /____//____  >
//         \/                   \/           \/   
//-------------------------------------------------------------------
// Cronus - Configuração de Batalha
//-------------------------------------------------------------------
// Originally Translated by Peter Kieser <pfak@telus.net>
// Made in to plainer English by Ancyker
// Traduzido para o Pt-BR por Reply.
//-------------------------------------------------------------------
// Nota 1: O valor é um parâmetro de configuração (on/off, yes/no ou 1/0)
// Nota 2: O valor é em porcentagem (100 quer dizer 100%)
// Nota 3: Valor é dado em bit. Se nenhuma descrição é dada,
//         assume os seguintes valores (1: Pc(Jogador), 2: Mob(Monstro), 
//         4: Pet(Bixinho de Estimação), 8: Homun(Homunculus)
//-------------------------------------------------------------------

// Quem deve ter um valor de baseatk (fazer 'for' afetar o dano)? (Nota 3)
enable_baseatk: 1

// Quem deve ter esquiva perfeita? (Note 3)
enable_perfect_flee: 0

// Quem deve ter ataque crítico? (Note 3)
// (Lembre-se que há algumas habilidades que sempre dão ataques críticos independente disto.)
enable_critical: 1

// Taxa de ataque crítico para não-jogadores (Note 2)
mob_critical_rate: 100
critical_rate: 100

// Ataque normal deve dar um atraso (delay) na hora de andar?
// Se não, os jogadores se mover no momento em que começarem um ataque (animação de ataque
// ou animação de caminhada pode ser omitida pelo client-side, causando ataques cortados ou
// monstros que teleportam até você)
// Se configurado, o total de atraso (delay) é definido pela duração do ataque animado dividido por
// este valor (ex.: 1 -> 100%, 2 -> 50%, 4->25%...)
attack_walk_delay: 0

// Atraso (delay) no movimento após ser atingido. (Note 2)
// O atraso para mover-se após ser atingido é calculado como uma porcentagem da duração da animação do dano.
// NOTA: Somente um único ataque afeta o atraso normal, não o atraso adicionado por múltiplos ataques, opção que você configura abaixo.
pc_damage_walk_delay_rate: 2
damage_walk_delay_rate: 2

// Atraso (delay) no movimento para múltiplos ataques.
// Quando atingido por uma habilidade de múltiplos acertos como Trovão de Júpiter ou Ira de Thor, o jogador não poderá
// se mover por "(número de acertos -1) * multihit_delay" milissegundos.
// 80 é a configuração do Aegis (vs Lâminas Destruidoras)
// 230 é a configuração que faz o 'walkdelay' permanecer até o último golpe (vs Trovão de Júpiter)
multihit_delay: 3

// Taxa de atraso de dano para jogadores (Note 2)
// (Alterando para 'no/0' será como se estivesse com Vigor)
player_damage_delay_rate: 0

// Raça ou Elemento deve ser usado para considerar alguém morto-vivo (undead)?
// 0 = elemento undead
// 1 = raça undead
// 2 = ambos (qualquer um dos dois funciona)
undead_detect_type: 0

// O HP deve ser recuperado se for atingido por algo que tenha seu mesmo atributo? (Note 1)
attribute_recover: no

// Qual a taxa mínima e máxima de acerto em ataques normais?
min_hitrate: 5
max_hitrate: 100

// Tipo de penalidade que é aplicada para FUGIR quando mais do quê 'agi_penalty_count' monstros estão atacando o jogador
// 0 = não é aplicada nenhuma pena
// 1 = agi_penalty_num é reduzido da ESQUIVA como uma porcentagem
// 2 = agi_penalty_num é reduzido da ESQUIVA como um valor exato
agi_penalty_type: 1

// Quando 'agi_penalty_tipe' estiver habilitada, a quem ela deve ser aplicada? (Note 3)
// Por padrão, somente jogadores tem a penalidade.
agi_penalty_target: 1

// Quantidade de inimigos requerida mirando o jogador antes que a ESQUIVA comece a ser penalizada.
agi_penalty_count: 3

// Quantidade de ESQUIVA penalizada por cada monstro atacando a mais do quê 'agi_penalty_count'.
agi_penalty_num: 10

// Tipo de penalidade que é aplicada na defesa (baseada na VIT e do equipamento) 
// quando mais do quê 'vit_penalty_count' monstros estão atacando o jogador.
// 0 = não é aplicada nenhuma pena
// 1 = vit_penalty_num é reduzido da DEF como uma porcentagem
// 2 = vit_penalty_num é reduzido da DEF como um valor exato
vit_penalty_type: 1

// Quando 'vit_ penalty_type' estiver habilitada, a quem ela deve ser aplicada? (Note 3)
// Por padrão, somente jogadores tem a penalidade.
vit_penalty_target: 1

// Quantidade de inimigos requerida mirando o jogador antes que a defesa comece a ser penalizada
vit_penalty_count: 3

// Quantidade de 'defesa VIT' penalizada por cada monstro atacando a mais do quê 'vit_penalty_count'
vit_penalty_num: 5

// Utilizar método alternativo de calcular a DEF para ataques físicos.
// Com 0, desabilita (utilização normal def% de redução com uma maior redução def2)
// Com 1 ou mais defesa é subtração de (DEF* value).
// Ex: 10 + 50 def se torna 0 + (10*type + 50)
weapon_defense_type: 0

//MDEF‚ mesmo que a acima....(MDEF*value)
magic_defense_type: 0

// Como contar o número de ataques quando estiver aplicando a penalidade de agi? (escolha um)
// 1-: Contar toda tentativa de ataque (mesmo aqueles que foram esquivados/esquivados-perfeitamente)
// 2 : Contar todos as não-esquivadas-perfeitamente tentativas de ataque
// 3 : Count attacks that miss due to element/race modifier
// 4 : Count attacks whose damages are blocked by skills
// 5 : Count only attacks that actually connect
// 6+: None of the above, count will always be 0
agi_penalty_count_lv: 2

// Como contar o número de ataques quando estiver aplicando a penalidade de vit? (escolha um_
// 1-: Contar toda tentativa de ataque (mesmo aqueles que foram esquivados/esquivados-perfeitamente)
// 2 : Contar todos as não-esquivadas-perfeitamente tentativas de ataque
// 3 : Count attacks that miss due to element/race modifier
// 4 : Count attacks whose damages are blocked by skills
// 5 : Count only attacks that actually connect
// 6+: None of the above, count will always be 0
vit_penalty_count_lv: 3

// Mudar a direção do atacante para enfrentar o oponente em todos os ataques? (Nota 3)
attack_direction_change: 15

// For those who is set, their innate attack element is "not elemental"
// (100% versus on all defense-elements) (Note 3)
// NOTE: This is the setting that makes it so non-players can hit for full
// damage against Ghost-type targets with normal attacks (eg: vs. Ghostring).
attack_attr_none: 14

// Taxa a qual o equipamento pode quebrar (taxa base com maior relevância que qualquer modificação da mesma por habilidades)
// 1 = 0.01% de chances. Padrão para servidores oficiais: 0
equip_natural_break_rate: 0

// Taxa global da qual seu próprio equipamento possa quebrar. (Nota 2)
// Esta taxa afeta a taxa de penalidade de quebra de habilidades como power-trust e sua taxa natural de quebra.
// (da equip_natural_break_rate). Se uma habilidade 'endow' de um Sábdio falhar e isso for maior que 0, a arma escolhida
// do personagem irá quebrar.
equip_self_break_rate: 30

// Taxa global a qual você consegue quebrar o equipamento alvo. (Nota 2)
// Isto afeta o comportamento das habilidades tais como Terror Ácido e Golpe Estilhaçante.
equip_skill_break_rate: 30

// Ataques de armas tem uma velocidade de atraso antes do dano real ser aplicado? (Nota 1)
// NOTA: A definição oficial é sim, mesmo que diminua um pouco o desempenho.
delay_battle_damage: yes

// Flechas e munições são consumidas quando usadas em flechas/armas?
// 0 = Não
// 1 = Sim
// 2 = Sim, mesmo para as habilidades que não especifiquem o consumo de flechas quando falam
//     que a habilidade é usada com arma de longo alcance (auto-suposições que
//     as habilidades devem consumir munição quando esta é adquirida por meio de uma carta ou plágio)
arrow_decrement: 0
